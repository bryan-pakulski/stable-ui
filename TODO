# Main Canvas

- Basic drawing tools (draw, erase(DONE), colour)
- Save canvas to file
- Load saved canvas
- Export canvas to png
- Images added to canvas are merged onto existing pixel array (actual layers)

# Core systems
- Add control net support: https://huggingface.co/blog/controlnet
- initialise string with a maximum length, this is important as if we reload configuration by editing the string manually via ImGui we don't have the hooks to re-size memory and we risk overwriting if the initial string is too short (This can potentially be resolved by using std::string as a resizable datatype, see imgui_stdlib.h)
- Add input sanitisation on sd_client on messages being sent, delimit or convert " to '?
- Document Indexing / Crawling engine
- Look at any performance improvements that can be used from openvino: https://github.com/bes-dev/stable_diffusion.openvino/tree/master

# Functionality

- Add support for textual inversion, see: https://towardsdatascience.com/how-to-fine-tune-stable-diffusion-using-textual-inversion-b995d7ecc095
- Delete models & configurations window
- Save output to temporary folder - "gen??" This way you can generate multiple item etc.. and move them automatically after generation is finished to an output folder
- Power of two scaling for selection box
- Render grid
- Load module progress bar or status window
- Depth to Img: https://huggingface.co/docs/diffusers/using-diffusers/depth2img
- Outpainting workflow: https://github.com/lkwq007/stablediffusion-infinity
- Add additional inpainting method: https://huggingface.co/spaces/Rothfeld/stable-diffusion-mat-outpainting-primer/blob/main/outpainting_example2.py

# Bugs

- Logging order is incorrect due to multiprocess access (gui C++ application, multiple python docker processes)
- Extra configuration i.e. trigger_prompt not being loaded from model yaml
- Heartbeat bug on windows (no connectivity)
- Multi string search doesn't work properly (Set union not working as intended?)
- Improve layering system interaction
- Move content browser to dropdown menu, integrate preview

# Done

- (FIX) Crash when docker closes and then ui is closed afterwards
- Add search and indexing system on prompt, image hash etc.. for image browser, will need some sort of metadata saved for each image generated (store inside image??)
- Move to huggingface diffusers library system to load models (see: https://github.com/huggingface/diffusers)
- use Xformers library https://github.com/facebookresearch/xformers/tree/main
- Look at implementing additional optimisations: https://huggingface.co/docs/diffusers/optimization/fp16
- Show existing configuration when editing model config
- Adjustable grid snapping
- Weighted prompts: https://huggingface.co/docs/diffusers/using-diffusers/weighted_prompts
- Render chunk objects to data structure that orders images based on X/Y position, add lookup function to sample pixel values at coordinates for img2img and inpainting/outpainting
- Refactor main rendering code
- Generated images don't seem to look correct, possible an issue with loading VAE? maybe other configuration is breaking, investigate image pipeline.. (This turns out to be xformers, no free meals here)
- (FIX) Too much logging with base64 images being sent to zmq
- (FIX) Selection not offseting correctly on Y axis, constrained to initial screenspace (check transform logic)
- (FIX) Save canvas buffer coordinates not working correctly
- (FIX) images above 512x512 resolution aren't being scaled correctly on canvas
- (FIX) Unable to use selection of non square sizes / images of non square size
- Proper layering system (not just per image)
- Generate button not changing state on txt2img / img2img
- Refactor generation code to use commands and avoid passing multiple members
- Inpainting: https://huggingface.co/docs/diffusers/using-diffusers/inpaint
- (FIX) Max of 27 images generated before overwriting, decide on new naming format
- Removed timer for indexer, fired manually after new images are generated
- (FIX) Fix docker permissions on linux
- When loading models add flag for VAE to be converted into diffusers format, model configuration can be loaded from yaml based on SD_V1:
