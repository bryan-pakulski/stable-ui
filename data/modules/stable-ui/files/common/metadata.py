#!/bin/python

# This class is responsible for appending metadata to an image that is generated by stable diffusion
# It takes an image path on instantiation and provides an interface to read/write the image metadata
import libxmp
from libxmp import XMPFiles, consts

class StableMetaData():

    img_path = None
    xmpfile = None
    xmp = None
    debug = True

    # Initialise against an image
    def __init__(self, img_path):
        print(f"Loading metadata for file: {img_path}")
        self.img_path = img_path
        self.xmpfile = XMPFiles(file_path=img_path, open_forupdate=True)
        self.xmp = self.xmpfile.get_xmp()
        
        # We initialise an empty meta dictionary as these fresh PNG's won't have any existing data
        if (self.xmp is None):
            if self.debug:
              print(f"Failed to load xmp from file: {img_path} creating new xmp data")
            self.xmp = libxmp.XMPMeta()

    def addMetaData(self, data_dict):
        for key, value in data_dict.items():
            self.xmp.set_property(consts.XMP_NS_DC, f"stableui-{key}", str(value))
    
    def readMetaData(self, key):
        return self.xmp.get_property(consts.XMP_NS_DC, key )

    # Save modified metadata back to file
    def save(self):
        if not self.xmpfile.can_put_xmp(self.xmp):
            if self.debug:
              print("Invalid XMP data, unable to save to file")
            return
        
        self.xmpfile.put_xmp(self.xmp)
        if self.debug:
          print(f"Wrote tags: {self.xmpfile.get_xmp()}")
        self.xmpfile.close_file()